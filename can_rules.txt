# Simple CAN IDS Rules
# Format: ALERT <CAN_ID_HEX_OR_DEC> <BYTE_INDEX> <OPERATOR> <VALUE> <MESSAGE>
# Operators: ==, !=, >, <, >=, <=, in, notin
# VALUE for 'in'/'notin' should be comma-separated integers (e.g., 0,1,2)
#
# Format: FREQ_ALERT <CAN_ID_HEX_OR_DEC> <MIN_FREQ_HZ> <MAX_FREQ_HZ> <MESSAGE>
# Checks if the observed frequency of messages for a given CAN ID is within the specified range [MIN_FREQ_HZ, MAX_FREQ_HZ] (inclusive).
#
# Format: LENGTH_ALERT <CAN_ID_HEX_OR_DEC> <NORMAL_LENGTH> <MESSAGE>
#
# Lines starting with # are comments.

# ID 0x188 - Indicator status
ALERT 0x188-0x190 0 > 2 Byte 1 (idx 0) has unexpected state.
ALERT 392 0 notin 0,1,2 Byte 1 (idx 0) has unexpected state [notin test].
FREQ_ALERT 0x188 0.5 2 Frequency out of expected range (0.5-2 Hz). {freq}
LENGTH_ALERT 0x188 4 Data length ({length}) exceeds expected max (4)

# ID 0x19B - Door lock status
ALERT 0x19B 2 &0xF0 > 0 Byte 3 (idx 2) has unexpected state.

# ID 0x244 - Speed status
ALERT 580 3-4 > 0x21C4 Example alert for high speed
ALERT 580 3-3 > 0x20 Testing range
ALERT 0x244 3 &0xF0 == 0x20 Bitmask test
ALERT 0x244 3 == twenty hello this alert should return an error
you can write whatever you like here and the program will not see it unless it starts with 
alert in which case it becomes an error
